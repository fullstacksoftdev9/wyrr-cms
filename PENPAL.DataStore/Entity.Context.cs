//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PENPAL.DataStore
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WYRREntities : DbContext
    {
        public WYRREntities()
            : base("name=WYRREntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<mstUser> mstUsers { get; set; }
        public virtual DbSet<OTPTransaction> OTPTransactions { get; set; }
        public virtual DbSet<trnUserEventDetail> trnUserEventDetails { get; set; }
        public virtual DbSet<trnUserTransactionDetail> trnUserTransactionDetails { get; set; }
        public virtual DbSet<trnUserWalletDetail> trnUserWalletDetails { get; set; }
        public virtual DbSet<trnUserParticipantEventDetail> trnUserParticipantEventDetails { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<mstCountry> mstCountries { get; set; }
        public virtual DbSet<trnUserTransactionSetting> trnUserTransactionSettings { get; set; }
        public virtual DbSet<cometchat_recentconversation> cometchat_recentconversation { get; set; }
        public virtual DbSet<cometchat> cometchats { get; set; }
        public virtual DbSet<TransactionRangeCharge> TransactionRangeCharges { get; set; }
        public virtual DbSet<StellarMasterUser> StellarMasterUsers { get; set; }
        public virtual DbSet<logTransactionDetail> logTransactionDetails { get; set; }
        public virtual DbSet<TransactionSetting> TransactionSettings { get; set; }
        public virtual DbSet<chat_user_connection> chat_user_connection { get; set; }
        public virtual DbSet<newsFeed> newsFeeds { get; set; }
    
        public virtual ObjectResult<GetUserTransactionHistory_Result> GetUserTransactionHistory(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserTransactionHistory_Result>("GetUserTransactionHistory", userIDParameter);
        }
    
        public virtual ObjectResult<GetRecentChatUser_Result> GetRecentChatUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRecentChatUser_Result>("GetRecentChatUser", userIDParameter);
        }
    
        public virtual ObjectResult<GetChatInvitesForUser_Result> GetChatInvitesForUser(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetChatInvitesForUser_Result>("GetChatInvitesForUser", userIDParameter);
        }
    
        public virtual ObjectResult<SendChatInviteToUser_Result> SendChatInviteToUser(Nullable<long> senderID, Nullable<long> receiverID)
        {
            var senderIDParameter = senderID.HasValue ?
                new ObjectParameter("SenderID", senderID) :
                new ObjectParameter("SenderID", typeof(long));
    
            var receiverIDParameter = receiverID.HasValue ?
                new ObjectParameter("ReceiverID", receiverID) :
                new ObjectParameter("ReceiverID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SendChatInviteToUser_Result>("SendChatInviteToUser", senderIDParameter, receiverIDParameter);
        }
    
        public virtual ObjectResult<AcceptRejectResendChatInvite_Result> AcceptRejectResendChatInvite(Nullable<long> connectionID, string connectionStatus)
        {
            var connectionIDParameter = connectionID.HasValue ?
                new ObjectParameter("ConnectionID", connectionID) :
                new ObjectParameter("ConnectionID", typeof(long));
    
            var connectionStatusParameter = connectionStatus != null ?
                new ObjectParameter("connectionStatus", connectionStatus) :
                new ObjectParameter("connectionStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AcceptRejectResendChatInvite_Result>("AcceptRejectResendChatInvite", connectionIDParameter, connectionStatusParameter);
        }
    
        public virtual ObjectResult<UpdateRecentChat_Result> UpdateRecentChat(Nullable<long> connectionID)
        {
            var connectionIDParameter = connectionID.HasValue ?
                new ObjectParameter("ConnectionID", connectionID) :
                new ObjectParameter("ConnectionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateRecentChat_Result>("UpdateRecentChat", connectionIDParameter);
        }
    
        public virtual ObjectResult<GetRecentChats_Result> GetRecentChats(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRecentChats_Result>("GetRecentChats", userIDParameter);
        }
    
        public virtual ObjectResult<GetUsersByName_Result> GetUsersByName(Nullable<long> userID, string searchText)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsersByName_Result>("GetUsersByName", userIDParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<GetNewsFeeds_Result> GetNewsFeeds(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNewsFeeds_Result>("GetNewsFeeds", userIDParameter);
        }
    }
}
